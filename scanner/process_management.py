import psutil, re

# Terminate a program 		O(1)
def terminate(process):
	try:
		process.terminate()
		return True
	except psutil.Error as e:
		return False

#-------------------------------------------------------------------------------------------------

# Get all programs that have currently running processes 	O(N)
def get_programs():
	programs = []
	counter = 0

	for process in psutil.process_iter ():		# O(N)
		if(counter == 0):
			programs.append(process)
			counter += 1
		elif(process.exe() == ""):
			continue
		elif(process.exe() == programs[counter - 1].exe()):
			continue
		else:
			programs.append(process)
			counter += 1
	return programs

#-------------------------------------------------------------------------------------------------

# Get file name from file path 		O(N)
def get_file_name_from_path(path):
	elements = path.split("/")		# O(N)
	return elements[len(elements) - 1]

#-------------------------------------------------------------------------------------------------

# Get the process run by a specific file 		O(N)
def get_process_run_by_file(file_name):
	for process in psutil.process_iter ():		# O(N)
		if(re.search(file_name + "$", str(process.exe()))):
			return process
	return False

#-------------------------------------------------------------------------------------------------

# check if the file is being used by another process 	O(N * M)
def check_if_file_is_used_by_another_process(file):
	for process in psutil.process_iter(): 	# O(N * M)	N is the number of processes iterated
		open_files = process.open_files() 	# O(M) 	M is the number of open files
		for f in open_files:
			if(f.path == file):
				return False
	return True
