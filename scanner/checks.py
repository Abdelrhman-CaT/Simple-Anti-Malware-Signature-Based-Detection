import os, psutil

# Check path validity for files 	O(1)
def check_path(path):
	if(os.path.exists(path)): 
		if(os.path.isfile(path)): 
			return True
		else:
			return False
	else:
		return False

#-------------------------------------------------------------------------------------------------

# Check path validity for directories 		O(1)
def check_path_directory(path):
	if(os.path.exists(path)):
		if(os.path.isdir(path)):
			return True 
		else:
			return False
	else:
		return False

#-------------------------------------------------------------------------------------------------

# Check signature validity 	O(N)
def check_signature(sig):
	sig = sig.replace(" ", "") 		# O(N)
	if(len(sig) == 64):
		return True 
	else:
		return False

#-------------------------------------------------------------------------------------------------

# Check the validity of a group of signatures 	O(M * N)
def check_signature_group(sigs):
	for s in sigs:		# O(M * N)
		if not(check_signature(s)): 	# O(N)
			return False
	return True

#-------------------------------------------------------------------------------------------------

# Check if the string represents a number 		O(1)
def is_number(str):
    try:
        float(str)
        return True
    except ValueError:
        return False

#-------------------------------------------------------------------------------------------------

# check if the file is being used by another process 	O(N * M)
def check_if_file_is_used_by_another_process(file):
	for process in psutil.process_iter(): 	# O(N * M)	N is the number of processes iterated
		open_files = process.open_files() 	# O(M) 	M is the number of open files
		for f in open_files:
			if(f.path == file):
				return False
	return True