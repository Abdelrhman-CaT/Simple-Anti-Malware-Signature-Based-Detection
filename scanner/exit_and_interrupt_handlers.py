import sys
from delete_files import delete_files
from real_time_buffers import real_time_total_files, real_time_malicious_files_buffer, real_time_malicious_files_with_process, real_time_malicious_files_without_process, real_time_malicious_files_with_process_termiated, real_time_malicious_files_with_process_not_termiated


# Interrupt handler (Also handling interrupts in case of real-time monitoring)
def summary_interrupt(signal, frame):
	num_all = len(real_time_total_files)
	num_detected = len(real_time_malicious_files_buffer)
	num_clean = num_all - num_detected
	num_detected_with_process = len(real_time_malicious_files_with_process)
	num_detected_with_no_process = len(real_time_malicious_files_without_process)
	num_detected_with_process_terminated = len(real_time_malicious_files_with_process_termiated)
	num_detected_with_process_non_terminated = len(real_time_malicious_files_with_process_not_termiated)

	if(num_all > 0):
		print("\n\nNumber of files scanned: " + str(num_all))
		print("Number of clean files: " + str(num_clean))
		print("Number of malicious files: " + str(num_detected))
		print("Number of malicious files having running processess: " + str(num_detected_with_process))
		print("Number of malicious files having no running processess: " + str(num_detected_with_no_process))
		print("Number of malicious files having their running processes terminated: " + str(num_detected_with_process_terminated))
		print("Number of malicious files having their running processes Not terminated: " + str(num_detected_with_process_non_terminated))

		if(num_detected > 0):
			delete_files(real_time_malicious_files_buffer)

	# 	print("\n\nBye!")
	# else:
	# 	print("\n\nBye!")

	sys.exit(0)



# Exit handler
def summary_exit():
	print("\n\nBye!")